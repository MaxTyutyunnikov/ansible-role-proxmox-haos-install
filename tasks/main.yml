- name: Create temporary directory
  ansible.builtin.tempfile:
    state: directory
    suffix: download
  register: haos_tempdir

- name: Get release list from Home Assistant repository
  ansible.builtin.uri:
    url: '{{ HAOS_API_RELEASES_URL }}'
    return_content: yes
  register: haos_releases

- name: Determine relevant asset for latest release (json containing image name and url)
  set_fact:
    haos_release: '{{ haos_releases.json | json_query("[?prerelease == `false`] | [0].assets[?contains(name, `vmdk`)] | [0]") }}'

- name: Download Home Assistant disk image
  get_url:
    url: '{{ haos_release.browser_download_url }}'
    dest: '{{ haos_tempdir.path }}/{{ haos_release.name }}'

- name: Unarchive downloaded image
  ansible.builtin.unarchive:
    src: '{{ haos_tempdir.path }}/{{ haos_release.name }}'
    dest: '{{ haos_tempdir.path }}'
    remote_src: yes

- name: Determine image filename (downloaded file without the zip extension)
  set_fact:
    haos_image_filename: '{{ haos_release.name | regex_search(".*\.vmdk") }}'

- name: Install packages required by proxmox_kvm module
  ansible.builtin.apt:
    pkg:
    - python3-proxmoxer
    - python3-requests
  become: true

- name: Create VM
  community.general.proxmox_kvm:
    agent: yes
    api_host: '{{ ansible_host }}'
    api_password: '{{ HAOS_PROXMOX_API_PASSWORD }}'
    api_user: '{{ HAOS_PROXMOX_API_USER }}'
    bios: ovmf
    cores: '{{ HAOS_PROXMOX_CORES }}'
    description: '{{ HAOS_PROXMOX_DESCRIPTION }}'
    localtime: yes
    memory: '{{ HAOS_PROXMOX_MEMORY }}'
    name: '{{ HAOS_PROXMOX_NAME }}'
    net:
      net0: 'virtio,bridge=vmbr0'
    node: '{{ HAOS_PROXMOX_NODE }}'
    onboot: '{{ HAOS_PROXMOX_ONBOOT }}'
    ostype: l26
    protection: '{{ HAOS_PROXMOX_PROTECTION }}'
    scsi:
      efidisk0: '{{ HAOS_PROXMOX_STORAGE }}:128'
    scsihw: '{{ HAOS_PROXMOX_SCSIHW }}'
    sockets: '{{ HAOS_PROXMOX_SOCKETS }}'
  register: haos_vm

- name: Import downloaded image
  ansible.builtin.shell:
    cmd: 'qm importdisk {{ haos_vm.vmid }} {{ haos_tempdir.path }}/{{ haos_image_filename }} {{ HAOS_PROXMOX_STORAGE }}'
  become: yes

- name: Have VM use imported image
  ansible.builtin.command:
    cmd: 'qm set {{ haos_vm.vmid }} -sata0 {{ HAOS_PROXMOX_STORAGE }}:vm-{{ haos_vm.vmid }}-disk-0,size=6G'
  become: yes

- name: Set boot order
  ansible.builtin.command:
    cmd: 'qm set {{ haos_vm.vmid }} -boot order=sata0'
  become: yes
